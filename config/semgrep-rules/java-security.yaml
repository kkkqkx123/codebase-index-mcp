rules:
  - id: java-sql-injection
    message: Potential SQL injection vulnerability. Use PreparedStatement instead.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          String query = "SELECT * FROM users WHERE id = '" + $USER_INPUT + "'";
          Statement stmt = connection.createStatement();
          stmt.executeQuery(query);
      - pattern: |
          String query = String.format("SELECT * FROM users WHERE id = '%s'", $USER_INPUT);
          Statement stmt = connection.createStatement();
          stmt.executeQuery(query);
    metadata:
      category: security
      cwe: "CWE-89: SQL Injection"
      owasp: "A03:2021 - Injection"
      references:
        - https://owasp.org/www-community/attacks/SQL_Injection
        - https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html

  - id: java-xss-reflected
    message: Reflected XSS vulnerability. Validate and encode user input.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          response.getWriter().write($USER_INPUT);
      - pattern: |
          out.println($USER_INPUT);
      - pattern: |
          response.getOutputStream().write($USER_INPUT.getBytes());
    metadata:
      category: security
      cwe: "CWE-79: Cross-Site Scripting (XSS)"
      owasp: "A03:2021 - Injection"
      references:
        - https://owasp.org/www-community/attacks/xss/

  - id: java-command-injection
    message: Potential command injection vulnerability. Validate user input.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          Runtime.getRuntime().exec($USER_INPUT);
      - pattern: |
          new ProcessBuilder($USER_INPUT).start();
      - pattern: |
          Runtime.getRuntime().exec(new String[]{..., $USER_INPUT, ...});
    metadata:
      category: security
      cwe: "CWE-78: OS Command Injection"
      owasp: "A03:2021 - Injection"
      references:
        - https://owasp.org/www-community/attacks/Command_Injection

  - id: java-path-traversal
    message: Potential path traversal vulnerability. Validate file paths.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          new FileInputStream($PATH + $USER_INPUT);
      - pattern: |
          new File($PATH, $USER_INPUT);
      - pattern: |
          Paths.get($PATH, $USER_INPUT);
    metadata:
      category: security
      cwe: "CWE-22: Path Traversal"
      owasp: "A01:2021 - Broken Access Control"
      references:
        - https://owasp.org/www-community/attacks/Path_Traversal

  - id: java-insecure-deserialization
    message: Insecure deserialization detected. Use safe serialization methods.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          new ObjectInputStream(...).readObject();
      - pattern: |
          ObjectInputStream ois = new ObjectInputStream(...);
          ois.readObject();
    metadata:
      category: security
      cwe: "CWE-502: Deserialization of Untrusted Data"
      owasp: "A08:2021 - Software and Data Integrity Failures"
      references:
        - https://owasp.org/www-community/vulnerabilities/Deserialization_of_untrusted_data

  - id: java-weak-crypto
    message: Weak cryptographic algorithm detected. Use strong algorithms.
    severity: WARNING
    languages:
      - java
    pattern-either:
      - pattern: |
          MessageDigest.getInstance("MD5");
      - pattern: |
          MessageDigest.getInstance("SHA1");
      - pattern: |
          new DESKeySpec(...);
      - pattern: |
          Cipher.getInstance("DES");
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp: "A02:2021 - Cryptographic Failures"
      references:
        - https://owasp.org/www-community/vulnerabilities/Weak_Cryptographic_Algorithm

  - id: java-hardcoded-secret
    message: Hardcoded secret detected. Store secrets securely.
    severity: WARNING
    languages:
      - java
    pattern-either:
      - pattern: |
          String $SECRET = "...";
      - pattern: |
          private static final String $SECRET = "...";
      - pattern: |
          byte[] $SECRET = "...".getBytes();
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp: "A07:2021 - Identification and Authentication Failures"
      references:
        - https://owasp.org/www-community/vulnerabilities/Use_of_hard-coded_credentials

  - id: java-xxe-vulnerability
    message: XML External Entity (XXE) vulnerability detected. Disable external entities.
    severity: ERROR
    languages:
      - java
    pattern-either:
      - pattern: |
          DocumentBuilderFactory.newInstance();
      - pattern: |
          SAXParserFactory.newInstance();
      - pattern: |
          XMLInputFactory.newInstance();
    metadata:
      category: security
      cwe: "CWE-611: Improper Restriction of XML External Entity Reference"
      owasp: "A05:2021 - Security Misconfiguration"
      references:
        - https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing