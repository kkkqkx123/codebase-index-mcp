● Let me use a more targeted approach and just remove the PrometheusMetricsService injection:

● Update(src\services\query\ResultFormatter.ts)
  ⎿  Updated src\services\query\ResultFormatter.ts with 1 addition and 2 removals
       137        @inject(TYPES.LoggerService) logger: LoggerService,
       138        @inject(TYPES.ErrorHandlerService) errorHandler: ErrorHandlerService,
       139        @inject(TYPES.ResultFormatterCache) cache: ResultFormatterCache,
       140 -      @inject(TYPES.ResultFormatterConfigLoader) configLoader: ResultFormatterConfigLoader,
       141 -      @inject(TYPES.PrometheusMetricsService) metricsService?: PrometheusMetricsService
       140 +      @inject(TYPES.ResultFormatterConfigLoader) configLoader: ResultFormatterConfigLoader
       141      ) {
       142         this.configService = configService;
       143         this.logger = logger;

● Now let me update the assignment of metricsService:

● Update(src\services\query\ResultFormatter.ts)
  ⎿  Updated src\services\query\ResultFormatter.ts with 2 additions and 1 removal
       144         this.errorHandler = errorHandler;
       145         this.cache = cache;
       146         this.configLoader = configLoader;
       147 -       this.metricsService = metricsService;
       147 +       // Metrics service is temporarily disabled due to registration conflicts
       148 +       this.metricsService = undefined;
       149       }
       150    
       151      private getConfig(): ResultFormatterFullConfig {