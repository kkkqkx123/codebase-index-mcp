version: '3.8'

services:
  # Development Services
  qdrant-dev:
    image: qdrant/qdrant:v1.7.0
    container_name: qdrant-dev
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
    networks:
      - codebase-network

  neo4j-dev:
    image: neo4j:5.15-community
    container_name: neo4j-dev
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_default__database=codegraph
    networks:
      - codebase-network

  # Application Service (for development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: codebase-index-dev
    ports:
      - "3000:3000"
      - "9090:9090"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - QDRANT_HOST=qdrant-dev
      - QDRANT_PORT=6333
      - NEO4J_URI=bolt://neo4j-dev:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=codegraph
    depends_on:
      - qdrant-dev
      - neo4j-dev
    networks:
      - codebase-network
    command: npm run dev

volumes:
  qdrant_data:
  neo4j_data:
  neo4j_logs:

networks:
  codebase-network:
    driver: bridge