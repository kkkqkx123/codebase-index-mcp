rules:
  - id: shared-variable-race-condition
    languages:
      - python
      - java
      - javascript
      - typescript
    message: |
      Shared variable race condition: Concurrent access to shared variable without proper synchronization.
      Use locks or other synchronization mechanisms to prevent race conditions.
    severity: ERROR
    pattern: $SHARED_VAR = $VALUE

  - id: concurrent-map-access
    languages:
      - python
      - java
      - javascript
      - typescript
    message: |
      Concurrent map access: Map/Dictionary accessed by multiple threads without synchronization.
      Consider using thread-safe collections or adding proper locking.
    severity: WARNING
    pattern: $MAP[$KEY] = $VALUE

  - id: resource-pool-race-condition
    languages:
      - python
      - java
      - javascript
    message: |
      Resource pool race condition: Race condition in resource pool management.
      Ensure thread-safe resource allocation and deallocation.
    severity: WARNING
    pattern: acquire()

  - id: async-operation-race-condition
    languages:
      - python
      - javascript
      - typescript
    message: |
      Async operation race condition: Race condition in asynchronous operations.
      Ensure proper synchronization between async operations.
    severity: INFO
    pattern: await $ASYNC_OP

  - id: file-access-race-condition
    languages:
      - python
      - java
      - javascript
    message: |
      File access race condition: Concurrent file access without proper locking.
      Use file locking mechanisms to prevent race conditions.
    severity: WARNING
    pattern: open($FILE_PATH)

  - id: counter-increment-race-condition
    languages:
      - python
      - java
      - javascript
      - typescript
    message: |
      Counter increment race condition: Counter increment operation not thread-safe.
      Use atomic increment operations or proper synchronization.
    severity: ERROR
    pattern: $COUNTER + 1