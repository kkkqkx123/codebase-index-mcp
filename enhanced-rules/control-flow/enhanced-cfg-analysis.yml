rules:
  - id: complex-nested-conditions
    message: "复杂嵌套条件：深度超过3层的if嵌套可能导致代码可读性差和维护困难"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: WARNING
    patterns:
      - pattern-inside: |
          if ($COND1) {
            ...
            if ($COND2) {
              ...
              if ($COND3) {
                ...
                if ($COND4) {
                  ...
                }
              }
            }
          }
    metadata:
      category: control-flow
      technology: [cfg, complexity]
      subcategory: [nesting, maintainability]
      cwe: ["CWE-570: Expression is Always False"]
      confidence: MEDIUM
      likelihood: MEDIUM
      impact: LOW

  - id: loop-invariant-code-motion
    message: "循环不变代码：在循环内部执行但每次迭代结果相同的计算可以移出循环"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: INFO
    patterns:
      - pattern-inside: |
          for (...) {
            ...
            $INVARIANT = $CONSTANT_COMPUTATION;
            ...
          }
      - metavariable-comparison:
          metavariable: $INVARIANT
          comparison: not redefined in loop
    metadata:
      category: control-flow
      technology: [cfg, optimization]
      subcategory: [performance, loop-optimization]
      confidence: MEDIUM
      likelihood: HIGH
      impact: MEDIUM

  - id: unreachable-code-detection
    message: "不可达代码：在return、break或continue语句后的代码永远不会执行"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: WARNING
    patterns:
      - pattern-inside: |
          if ($CONDITION) {
            return $VALUE;
          }
          $UNREACHABLE_CODE
      - pattern-inside: |
          while ($CONDITION) {
            break;
            $UNREACHABLE_CODE
          }
    metadata:
      category: control-flow
      technology: [cfg, dead-code]
      subcategory: [dead-code, logic-error]
      cwe: ["CWE-561: Dead Code"]
      confidence: HIGH
      likelihood: HIGH
      impact: MEDIUM

  - id: switch-fallthrough-detection
    message: "switch语句缺少break：可能导致意外的case穿透行为"
    languages: [javascript, typescript, java, go, csharp]
    severity: WARNING
    patterns:
      - pattern-not-inside: |
          switch ($EXPR) {
            case $VALUE1:
              $BODY1
              break;
            case $VALUE2:
              $BODY2
              break;
          }
      - pattern: |
          switch ($EXPR) {
            case $VALUE1:
              $BODY1
            case $VALUE2:
              $BODY2
          }
    metadata:
      category: control-flow
      technology: [cfg, switch-statement]
      subcategory: [fallthrough, logic-error]
      cwe: ["CWE-484: Omitted Break Statement in Switch"]
      confidence: HIGH
      likelihood: MEDIUM
      impact: HIGH

  - id: recursion-depth-analysis
    message: "递归调用缺少终止条件：可能导致栈溢出"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: ERROR
    patterns:
      - pattern: |
          function $FUNC(...) {
            ...
            $FUNC(...);
            ...
          }
      - pattern-not-inside: |
          function $FUNC(...) {
            ...
            if ($TERMINATION_CONDITION) {
              return ...;
            }
            $FUNC(...);
            ...
          }
    metadata:
      category: control-flow
      technology: [cfg, recursion]
      subcategory: [termination, stack-overflow]
      cwe: ["CWE-674: Uncontrolled Recursion"]
      confidence: HIGH
      likelihood: HIGH
      impact: HIGH

  - id: early-return-complexity
    message: "函数内多个early return：可能使代码难以理解和维护"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: INFO
    patterns:
      - pattern-either:
          - pattern: |
              function $FUNC(...) {
                ...
                if (...) return ...;
                ...
                if (...) return ...;
                ...
                if (...) return ...;
                ...
              }
          - pattern: |
              def $FUNC(...):
                ...
                if ...:
                  return ...
                ...
                if ...:
                  return ...
                ...
                if ...:
                  return ...
                ...
      - metavariable-comparison:
          metavariable: $COUNT
          comparison: count(return) >= 4
    metadata:
      category: control-flow
      technology: [cfg, complexity]
      subcategory: [readability, maintainability]
      confidence: LOW
      likelihood: LOW
      impact: LOW