rules:
  - id: sql-injection-basic
    pattern: |
      $QUERY = "SELECT * FROM $TABLE WHERE $COLUMN = '" + $USER_INPUT + "'";
    message: "SQL注入漏洞：用户输入直接拼接到SQL查询字符串"
    languages: [javascript, typescript, python, java, go, csharp]
    severity: ERROR
    metadata:
      category: security
      technology: [sql-injection]
      cwe: ["CWE-89"]
      owasp: ["A03:2021"]
      confidence: HIGH
      likelihood: HIGH
      impact: HIGH

  - id: sql-injection-template-string
    pattern: |
      $QUERY = `SELECT * FROM $TABLE WHERE $COLUMN = '${$USER_INPUT}'`
    message: "SQL注入漏洞：模板字符串中用户输入未转义"
    languages: [javascript, typescript]
    severity: ERROR
    metadata:
      category: security
      technology: [sql-injection]
      cwe: ["CWE-89"]
      owasp: ["A03:2021"]
      confidence: HIGH
      likelihood: HIGH
      impact: HIGH

  - id: sql-injection-format-string
    pattern: |
      $QUERY = "SELECT * FROM $TABLE WHERE $COLUMN = %s" % $USER_INPUT
    message: "SQL注入漏洞：格式化字符串中用户输入未转义"
    languages: [python]
    severity: ERROR
    metadata:
      category: security
      technology: [sql-injection]
      cwe: ["CWE-89"]
      owasp: ["A03:2021"]
      confidence: HIGH
      likelihood: HIGH
      impact: HIGH

  - id: sql-injection-prepared-statement-safe
    pattern: |
      $STMT = $CONN.prepare("SELECT * FROM $TABLE WHERE $COLUMN = ?");
      $STMT.execute($USER_INPUT);
    message: "良好实践：使用预编译语句防止SQL注入"
    languages: [javascript, typescript, java, csharp]
    severity: INFO
    metadata:
      category: security
      technology: [sql-injection]
      subcategory: [safe-coding]
      confidence: LOW
      likelihood: LOW
      impact: LOW

  - id: sql-injection-orm-safe
    pattern: |
      $MODEL.find({ $COLUMN: $USER_INPUT });
    message: "良好实践：使用ORM防止SQL注入"
    languages: [javascript, typescript, python]
    severity: INFO
    metadata:
      category: security
      technology: [sql-injection]
      subcategory: [safe-coding]
      confidence: LOW
      likelihood: LOW
      impact: LOW