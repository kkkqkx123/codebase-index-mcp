rules:
  - id: enhanced-control-flow-complexity
    message: Complex nested conditions detected - consider refactoring
    languages: [javascript, typescript, python, java, csharp]
    severity: WARNING
    pattern: |
      if ($COND1) {
        if ($COND2) {
          if ($COND3) {
            ...
          }
        }
      }
    metadata:
      category: maintainability
      confidence: MEDIUM

  - id: enhanced-sql-injection-detection
    message: Potential SQL injection vulnerability detected
    languages: [javascript, typescript, python, java, csharp]
    severity: ERROR
    pattern-either:
      - pattern: |
          $QUERY = "..." + $USER_INPUT + "..."
      - pattern: |
          $QUERY = `...${$USER_INPUT}...`
      - pattern: |
          $DB.exec("..." + $USER_INPUT + "...")
    metadata:
      category: security
      cwe: CWE-89
      confidence: HIGH

  - id: enhanced-xss-detection
    message: Potential XSS vulnerability via unsafe DOM manipulation
    languages: [javascript, typescript]
    severity: ERROR
    pattern-either:
      - pattern: |
          $ELEMENT.innerHTML = $USER_INPUT
      - pattern: |
          $ELEMENT.outerHTML = $USER_INPUT
      - pattern: |
          document.write($USER_INPUT)
    metadata:
      category: security
      cwe: CWE-79
      confidence: HIGH

  - id: enhanced-command-injection
    message: Potential command injection vulnerability
    languages: [javascript, typescript, python, java, csharp]
    severity: ERROR
    pattern-either:
      - pattern: |
          exec($USER_INPUT)
      - pattern: |
          system($USER_INPUT)
      - pattern: |
          Runtime.getRuntime().exec($USER_INPUT)
    metadata:
      category: security
      cwe: CWE-78
      confidence: HIGH

  - id: enhanced-path-traversal
    message: Potential path traversal vulnerability
    languages: [javascript, typescript, python, java, csharp]
    severity: ERROR
    pattern-either:
      - pattern: |
          open($USER_INPUT)
      - pattern: |
          readFile($USER_INPUT)
      - pattern: |
          new File($USER_INPUT)
    metadata:
      category: security
      cwe: CWE-22
      confidence: HIGH

  - id: enhanced-resource-leak
    message: Potential resource leak - resource not properly closed
    languages: [java, csharp, python]
    severity: WARNING
    pattern: |
      $RESOURCE = new $TYPE(...)
      ...
      // No $RESOURCE.close() or try-with-resources
    metadata:
      category: reliability
      cwe: CWE-404
      confidence: MEDIUM

  - id: enhanced-error-handling
    message: Generic exception handling without specific error types
    languages: [javascript, typescript, python, java, csharp]
    severity: INFO
    pattern: |
      try {
        ...
      } catch ($EX) {
        // Generic exception handling
      }
    metadata:
      category: best-practice
      confidence: LOW

  - id: enhanced-logging-security
    message: Sensitive data might be logged
    languages: [javascript, typescript, python, java, csharp]
    severity: WARNING
    pattern: |
      console.log($SENSITIVE_DATA)
    metadata:
      category: security
      cwe: CWE-532
      confidence: MEDIUM

  - id: enhanced-cors-misconfiguration
    message: CORS misconfiguration detected
    languages: [javascript, typescript]
    severity: ERROR
    pattern: |
      app.use(cors({ origin: '*' }))
    metadata:
      category: security
      cwe: CWE-942
      confidence: HIGH

  - id: enhanced-authentication-bypass
    message: Potential authentication bypass
    languages: [javascript, typescript, python, java, csharp]
    severity: ERROR
    pattern: |
      if ($CONDITION) {
        return true; // Bypass authentication
      }
    metadata:
      category: security
      cwe: CWE-288
      confidence: HIGH